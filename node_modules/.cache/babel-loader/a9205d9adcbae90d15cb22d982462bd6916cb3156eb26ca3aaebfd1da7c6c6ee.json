{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* istanbul ignore file */\nconst encryptionBrowser_1 = require(\"../encryptionBrowser\");\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\nexports.default = async (cid, fileEncryptionKey, mimeType) => {\n  const response = await (0, util_1.fetchWithTimeout)(lighthouse_config_1.lighthouseConfig.lighthouseGateway + '/api/v0/cat/' + cid, {\n    method: 'POST',\n    timeout: 7200000\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  const result = await response.blob();\n  const decrypted = await (0, encryptionBrowser_1.decryptFile)(await result.arrayBuffer(), fileEncryptionKey);\n  if (decrypted) {\n    if (mimeType) {\n      return new Blob([decrypted], {\n        type: mimeType\n      });\n    } else {\n      return new Blob([decrypted]);\n    }\n  } else {\n    return null;\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","encryptionBrowser_1","require","lighthouse_config_1","util_1","default","cid","fileEncryptionKey","mimeType","response","fetchWithTimeout","lighthouseConfig","lighthouseGateway","method","timeout","ok","Error","status","result","blob","decrypted","decryptFile","arrayBuffer","Blob","type"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/uploadEncrypted/decrypt/browser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* istanbul ignore file */\nconst encryptionBrowser_1 = require(\"../encryptionBrowser\");\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\nexports.default = async (cid, fileEncryptionKey, mimeType) => {\n    const response = await (0, util_1.fetchWithTimeout)(lighthouse_config_1.lighthouseConfig.lighthouseGateway + '/api/v0/cat/' + cid, {\n        method: 'POST',\n        timeout: 7200000,\n    });\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const result = await response.blob();\n    const decrypted = await (0, encryptionBrowser_1.decryptFile)(await result.arrayBuffer(), fileEncryptionKey);\n    if (decrypted) {\n        if (mimeType) {\n            return new Blob([decrypted], { type: mimeType });\n        }\n        else {\n            return new Blob([decrypted]);\n        }\n    }\n    else {\n        return null;\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3D,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACjE,MAAME,MAAM,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC1CH,OAAO,CAACM,OAAO,GAAG,OAAOC,GAAG,EAAEC,iBAAiB,EAAEC,QAAQ,KAAK;EAC1D,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAEL,MAAM,CAACM,gBAAgB,EAAEP,mBAAmB,CAACQ,gBAAgB,CAACC,iBAAiB,GAAG,cAAc,GAAGN,GAAG,EAAE;IAC/HO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBP,QAAQ,CAACQ,MAAM,EAAE,CAAC;EAC7D;EACA,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EACpC,MAAMC,SAAS,GAAG,MAAM,CAAC,CAAC,EAAEnB,mBAAmB,CAACoB,WAAW,EAAE,MAAMH,MAAM,CAACI,WAAW,CAAC,CAAC,EAAEf,iBAAiB,CAAC;EAC3G,IAAIa,SAAS,EAAE;IACX,IAAIZ,QAAQ,EAAE;MACV,OAAO,IAAIe,IAAI,CAAC,CAACH,SAAS,CAAC,EAAE;QAAEI,IAAI,EAAEhB;MAAS,CAAC,CAAC;IACpD,CAAC,MACI;MACD,OAAO,IAAIe,IAAI,CAAC,CAACH,SAAS,CAAC,CAAC;IAChC;EACJ,CAAC,MACI;IACD,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}