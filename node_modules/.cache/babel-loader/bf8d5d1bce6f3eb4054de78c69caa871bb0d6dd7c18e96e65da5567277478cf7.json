{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* istanbul ignore file */\nconst encryptionNode_1 = require(\"../encryptionNode\");\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\nexports.default = async (cid, fileEncryptionKey) => {\n  try {\n    const response = await (0, util_1.fetchWithTimeout)(lighthouse_config_1.lighthouseConfig.lighthouseGateway + '/api/v0/cat/' + cid, {\n      method: 'POST',\n      timeout: 7200000\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    const result = Buffer.from(arrayBuffer);\n    const decrypted = await (0, encryptionNode_1.decryptFile)(result, fileEncryptionKey);\n    return decrypted;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","encryptionNode_1","require","lighthouse_config_1","util_1","default","cid","fileEncryptionKey","response","fetchWithTimeout","lighthouseConfig","lighthouseGateway","method","timeout","ok","Error","status","arrayBuffer","result","Buffer","from","decrypted","decryptFile","error","message"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/uploadEncrypted/decrypt/node.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* istanbul ignore file */\nconst encryptionNode_1 = require(\"../encryptionNode\");\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\nexports.default = async (cid, fileEncryptionKey) => {\n    try {\n        const response = await (0, util_1.fetchWithTimeout)(lighthouse_config_1.lighthouseConfig.lighthouseGateway + '/api/v0/cat/' + cid, {\n            method: 'POST',\n            timeout: 7200000,\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const arrayBuffer = await response.arrayBuffer();\n        const result = Buffer.from(arrayBuffer);\n        const decrypted = await (0, encryptionNode_1.decryptFile)(result, fileEncryptionKey);\n        return decrypted;\n    }\n    catch (error) {\n        throw new Error(error.message);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACrD,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACjE,MAAME,MAAM,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC1CH,OAAO,CAACM,OAAO,GAAG,OAAOC,GAAG,EAAEC,iBAAiB,KAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAEJ,MAAM,CAACK,gBAAgB,EAAEN,mBAAmB,CAACO,gBAAgB,CAACC,iBAAiB,GAAG,cAAc,GAAGL,GAAG,EAAE;MAC/HM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;IACb,CAAC,CAAC;IACF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBP,QAAQ,CAACQ,MAAM,EAAE,CAAC;IAC7D;IACA,MAAMC,WAAW,GAAG,MAAMT,QAAQ,CAACS,WAAW,CAAC,CAAC;IAChD,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,WAAW,CAAC;IACvC,MAAMI,SAAS,GAAG,MAAM,CAAC,CAAC,EAAEpB,gBAAgB,CAACqB,WAAW,EAAEJ,MAAM,EAAEX,iBAAiB,CAAC;IACpF,OAAOc,SAAS;EACpB,CAAC,CACD,OAAOE,KAAK,EAAE;IACV,MAAM,IAAIR,KAAK,CAACQ,KAAK,CAACC,OAAO,CAAC;EAClC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}