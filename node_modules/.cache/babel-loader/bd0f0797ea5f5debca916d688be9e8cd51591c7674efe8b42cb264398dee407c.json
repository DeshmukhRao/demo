{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst lighthouse_config_1 = require(\"../../lighthouse.config\");\nexports.default = async (publicKey, signedMessage) => {\n  try {\n    const response = await fetch(lighthouse_config_1.lighthouseConfig.lighthouseAPI + `/api/auth/create_api_key`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        publicKey: publicKey,\n        signedMessage: signedMessage\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const apiKey = await response.json();\n    /*\n      return:\n        { data: { apiKey: '489a497e-4e0c-4cb5-9522-ca07740f6dfb' } }\n    */\n    return {\n      data: {\n        apiKey\n      }\n    };\n  } catch (error) {\n    throw new Error(error.response.data);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","lighthouse_config_1","require","default","publicKey","signedMessage","response","fetch","lighthouseConfig","lighthouseAPI","method","headers","body","JSON","stringify","ok","Error","status","apiKey","json","data","error"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/getApiKey/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lighthouse_config_1 = require(\"../../lighthouse.config\");\nexports.default = async (publicKey, signedMessage) => {\n    try {\n        const response = await fetch(lighthouse_config_1.lighthouseConfig.lighthouseAPI + `/api/auth/create_api_key`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                publicKey: publicKey,\n                signedMessage: signedMessage,\n            }),\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const apiKey = (await response.json());\n        /*\n          return:\n            { data: { apiKey: '489a497e-4e0c-4cb5-9522-ca07740f6dfb' } }\n        */\n        return { data: { apiKey } };\n    }\n    catch (error) {\n        throw new Error(error.response.data);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAC9DH,OAAO,CAACI,OAAO,GAAG,OAAOC,SAAS,EAAEC,aAAa,KAAK;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,mBAAmB,CAACO,gBAAgB,CAACC,aAAa,GAAG,0BAA0B,EAAE;MAC1GC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBV,SAAS,EAAEA,SAAS;QACpBC,aAAa,EAAEA;MACnB,CAAC;IACL,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACS,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBV,QAAQ,CAACW,MAAM,EAAE,CAAC;IAC7D;IACA,MAAMC,MAAM,GAAI,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAE;IACtC;AACR;AACA;AACA;IACQ,OAAO;MAAEC,IAAI,EAAE;QAAEF;MAAO;IAAE,CAAC;EAC/B,CAAC,CACD,OAAOG,KAAK,EAAE;IACV,MAAM,IAAIL,KAAK,CAACK,KAAK,CAACf,QAAQ,CAACc,IAAI,CAAC;EACxC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}