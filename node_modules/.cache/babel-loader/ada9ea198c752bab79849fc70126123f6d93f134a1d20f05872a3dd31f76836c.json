{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nexports.default = async (blob, apiKey, mimeType = '') => {\n  try {\n    const token = 'Bearer ' + apiKey;\n    const endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + '/api/v0/add';\n    // Upload file\n    const formData = new FormData();\n    formData.set('file', blob);\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Mime-Type': mimeType,\n        Authorization: token\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Request failed with status code ${response.status}`);\n    }\n    const data = await response.json();\n    return {\n      data\n    };\n  } catch (error) {\n    throw new Error(error?.message);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","lighthouse_config_1","require","default","blob","apiKey","mimeType","token","endpoint","lighthouseConfig","lighthouseNode","formData","FormData","set","response","fetch","method","body","headers","Authorization","ok","Error","status","data","json","error","message"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/upload/buffer/browser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nexports.default = async (blob, apiKey, mimeType = '') => {\n    try {\n        const token = 'Bearer ' + apiKey;\n        const endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + '/api/v0/add';\n        // Upload file\n        const formData = new FormData();\n        formData.set('file', blob);\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Mime-Type': mimeType,\n                Authorization: token,\n            },\n        });\n        if (!response.ok) {\n            throw new Error(`Request failed with status code ${response.status}`);\n        }\n        const data = await response.json();\n        return { data };\n    }\n    catch (error) {\n        throw new Error(error?.message);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACjEH,OAAO,CAACI,OAAO,GAAG,OAAOC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,GAAG,EAAE,KAAK;EACrD,IAAI;IACA,MAAMC,KAAK,GAAG,SAAS,GAAGF,MAAM;IAChC,MAAMG,QAAQ,GAAGP,mBAAmB,CAACQ,gBAAgB,CAACC,cAAc,GAAG,aAAa;IACpF;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,GAAG,CAAC,MAAM,EAAET,IAAI,CAAC;IAC1B,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,EAAE;MACnCQ,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN,QAAQ;MACdO,OAAO,EAAE;QACL,WAAW,EAAEZ,QAAQ;QACrBa,aAAa,EAAEZ;MACnB;IACJ,CAAC,CAAC;IACF,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,mCAAmCP,QAAQ,CAACQ,MAAM,EAAE,CAAC;IACzE;IACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAO;MAAED;IAAK,CAAC;EACnB,CAAC,CACD,OAAOE,KAAK,EAAE;IACV,MAAM,IAAIJ,KAAK,CAACI,KAAK,EAAEC,OAAO,CAAC;EACnC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}