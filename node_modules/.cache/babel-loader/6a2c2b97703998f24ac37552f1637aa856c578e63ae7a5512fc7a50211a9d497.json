{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst lighthouse_config_1 = require(\"../../lighthouse.config\");\nexports.default = async (authToken, lastKey = null) => {\n  try {\n    const response = await fetch(lighthouse_config_1.lighthouseConfig.lighthouseAPI + `/api/user/files_uploaded?lastKey=${lastKey}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Request failed with status code ${response.status}`);\n    }\n    const uploads = await response.json();\n    /*\n      {\n        \"fileList\":[\n            {\n              publicKey: '0xa3c960b3ba29367ecbcaf1430452c6cd7516f588',\n              fileName: 'flow1.png',\n              mimeType: 'image/png',\n              txHash: '0x7c9ee1585be6b85bef471a27535fb4b8d7551340152c36c025743c36fd0d1acc',\n              status: 'testnet',\n              createdAt: 1662880331683,\n              fileSizeInBytes: '31735',\n              cid: 'QmZvWp5Xdyi7z5QqGdXZP63QCBNoNvjupF1BohDULQcicA',\n              id: 'aaab8053-0f1e-4482-9f84-d413fad14266',\n              lastUpdate: 1662883207149,\n              encryption: true\n            },\n          ],\n        \"totalFiles\": 75\n      }\n    */\n    return {\n      data: uploads\n    };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","lighthouse_config_1","require","default","authToken","lastKey","response","fetch","lighthouseConfig","lighthouseAPI","headers","Authorization","ok","Error","status","uploads","json","data","error","message"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/getUploads/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lighthouse_config_1 = require(\"../../lighthouse.config\");\nexports.default = async (authToken, lastKey = null) => {\n    try {\n        const response = await fetch(lighthouse_config_1.lighthouseConfig.lighthouseAPI +\n            `/api/user/files_uploaded?lastKey=${lastKey}`, {\n            headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json',\n            },\n        });\n        if (!response.ok) {\n            throw new Error(`Request failed with status code ${response.status}`);\n        }\n        const uploads = (await response.json());\n        /*\n          {\n            \"fileList\":[\n                {\n                  publicKey: '0xa3c960b3ba29367ecbcaf1430452c6cd7516f588',\n                  fileName: 'flow1.png',\n                  mimeType: 'image/png',\n                  txHash: '0x7c9ee1585be6b85bef471a27535fb4b8d7551340152c36c025743c36fd0d1acc',\n                  status: 'testnet',\n                  createdAt: 1662880331683,\n                  fileSizeInBytes: '31735',\n                  cid: 'QmZvWp5Xdyi7z5QqGdXZP63QCBNoNvjupF1BohDULQcicA',\n                  id: 'aaab8053-0f1e-4482-9f84-d413fad14266',\n                  lastUpdate: 1662883207149,\n                  encryption: true\n                },\n              ],\n            \"totalFiles\": 75\n          }\n        */\n        return { data: uploads };\n    }\n    catch (error) {\n        throw new Error(error.message);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAC9DH,OAAO,CAACI,OAAO,GAAG,OAAOC,SAAS,EAAEC,OAAO,GAAG,IAAI,KAAK;EACnD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,mBAAmB,CAACO,gBAAgB,CAACC,aAAa,GAC3E,oCAAoCJ,OAAO,EAAE,EAAE;MAC/CK,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUP,SAAS,EAAE;QACpC,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,IAAI,CAACE,QAAQ,CAACM,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,mCAAmCP,QAAQ,CAACQ,MAAM,EAAE,CAAC;IACzE;IACA,MAAMC,OAAO,GAAI,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAE;IACvC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,OAAO;MAAEC,IAAI,EAAEF;IAAQ,CAAC;EAC5B,CAAC,CACD,OAAOG,KAAK,EAAE;IACV,MAAM,IAAIL,KAAK,CAACK,KAAK,CAACC,OAAO,CAAC;EAClC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}