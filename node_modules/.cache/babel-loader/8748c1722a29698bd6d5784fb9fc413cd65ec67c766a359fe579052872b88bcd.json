{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* istanbul ignore file */\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexports.default = async (files, accessToken, dealParameters, uploadProgressCallback) => {\n  try {\n    const isDirectory = [...files].some(file => file.webkitRelativePath);\n    let endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + `/api/v0/add?wrap-with-directory=false`;\n    if (!isDirectory && files.length > 1) {\n      endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + `/api/v0/add?wrap-with-directory=true`;\n    }\n    const formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append('file', files[i]);\n    }\n    const token = 'Bearer ' + accessToken;\n    const headers = new Headers({\n      Authorization: token,\n      'X-Deal-Parameter': dealParameters ? JSON.stringify(dealParameters) : 'null'\n    });\n    const response = uploadProgressCallback ? await (0, util_1.fetchWithTimeout)(endpoint, {\n      method: 'POST',\n      body: formData,\n      headers: headers,\n      timeout: 7200000,\n      onProgress: progress => {\n        uploadProgressCallback({\n          progress: progress\n        });\n      }\n    }) : await (0, util_1.fetchWithTimeout)(endpoint, {\n      method: 'POST',\n      body: formData,\n      headers: headers,\n      timeout: 7200000\n    });\n    if (!response.ok) {\n      throw new Error(`Request failed with status code ${response.status}`);\n    }\n    const responseText = await response.text();\n    return {\n      data: JSON.parse(responseText)\n    };\n  } catch (error) {\n    throw new Error(error?.message);\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","lighthouse_config_1","require","util_1","default","files","accessToken","dealParameters","uploadProgressCallback","isDirectory","some","file","webkitRelativePath","endpoint","lighthouseConfig","lighthouseNode","length","formData","FormData","i","append","token","headers","Headers","Authorization","JSON","stringify","response","fetchWithTimeout","method","body","timeout","onProgress","progress","ok","Error","status","responseText","text","data","parse","error","message"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/upload/files/browser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* istanbul ignore file */\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexports.default = async (files, accessToken, dealParameters, uploadProgressCallback) => {\n    try {\n        const isDirectory = [...files].some(file => file.webkitRelativePath);\n        let endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + `/api/v0/add?wrap-with-directory=false`;\n        if (!isDirectory && files.length > 1) {\n            endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + `/api/v0/add?wrap-with-directory=true`;\n        }\n        const formData = new FormData();\n        for (let i = 0; i < files.length; i++) {\n            formData.append('file', files[i]);\n        }\n        const token = 'Bearer ' + accessToken;\n        const headers = new Headers({\n            Authorization: token,\n            'X-Deal-Parameter': dealParameters\n                ? JSON.stringify(dealParameters)\n                : 'null',\n        });\n        const response = uploadProgressCallback\n            ? await (0, util_1.fetchWithTimeout)(endpoint, {\n                method: 'POST',\n                body: formData,\n                headers: headers,\n                timeout: 7200000,\n                onProgress: (progress) => {\n                    uploadProgressCallback({\n                        progress: progress,\n                    });\n                },\n            })\n            : await (0, util_1.fetchWithTimeout)(endpoint, {\n                method: 'POST',\n                body: formData,\n                headers: headers,\n                timeout: 7200000,\n            });\n        if (!response.ok) {\n            throw new Error(`Request failed with status code ${response.status}`);\n        }\n        const responseText = await response.text();\n        return { data: JSON.parse(responseText) };\n    }\n    catch (error) {\n        throw new Error(error?.message);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACjE,MAAMC,MAAM,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC1C;AACAH,OAAO,CAACK,OAAO,GAAG,OAAOC,KAAK,EAAEC,WAAW,EAAEC,cAAc,EAAEC,sBAAsB,KAAK;EACpF,IAAI;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGJ,KAAK,CAAC,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,kBAAkB,CAAC;IACpE,IAAIC,QAAQ,GAAGZ,mBAAmB,CAACa,gBAAgB,CAACC,cAAc,GAAG,uCAAuC;IAC5G,IAAI,CAACN,WAAW,IAAIJ,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;MAClCH,QAAQ,GAAGZ,mBAAmB,CAACa,gBAAgB,CAACC,cAAc,GAAG,sCAAsC;IAC3G;IACA,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,KAAK,CAACW,MAAM,EAAEG,CAAC,EAAE,EAAE;MACnCF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEf,KAAK,CAACc,CAAC,CAAC,CAAC;IACrC;IACA,MAAME,KAAK,GAAG,SAAS,GAAGf,WAAW;IACrC,MAAMgB,OAAO,GAAG,IAAIC,OAAO,CAAC;MACxBC,aAAa,EAAEH,KAAK;MACpB,kBAAkB,EAAEd,cAAc,GAC5BkB,IAAI,CAACC,SAAS,CAACnB,cAAc,CAAC,GAC9B;IACV,CAAC,CAAC;IACF,MAAMoB,QAAQ,GAAGnB,sBAAsB,GACjC,MAAM,CAAC,CAAC,EAAEL,MAAM,CAACyB,gBAAgB,EAAEf,QAAQ,EAAE;MAC3CgB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEb,QAAQ;MACdK,OAAO,EAAEA,OAAO;MAChBS,OAAO,EAAE,OAAO;MAChBC,UAAU,EAAGC,QAAQ,IAAK;QACtBzB,sBAAsB,CAAC;UACnByB,QAAQ,EAAEA;QACd,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,GACA,MAAM,CAAC,CAAC,EAAE9B,MAAM,CAACyB,gBAAgB,EAAEf,QAAQ,EAAE;MAC3CgB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEb,QAAQ;MACdK,OAAO,EAAEA,OAAO;MAChBS,OAAO,EAAE;IACb,CAAC,CAAC;IACN,IAAI,CAACJ,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,mCAAmCR,QAAQ,CAACS,MAAM,EAAE,CAAC;IACzE;IACA,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC1C,OAAO;MAAEC,IAAI,EAAEd,IAAI,CAACe,KAAK,CAACH,YAAY;IAAE,CAAC;EAC7C,CAAC,CACD,OAAOI,KAAK,EAAE;IACV,MAAM,IAAIN,KAAK,CAACM,KAAK,EAAEC,OAAO,CAAC;EACnC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}