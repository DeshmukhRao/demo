{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.saveShards = void 0;\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../../util\");\nconst saveShards = async (address, cid, auth_token, keyShards, shareTo = []) => {\n  if (!(0, util_2.isCidReg)(cid)) {\n    return {\n      isSuccess: false,\n      error: \"Invalid CID\"\n    };\n  }\n  if (!Array.isArray(keyShards) || keyShards.length != 5) {\n    return {\n      isSuccess: false,\n      error: \"keyShards must be an array of 5 objects\"\n    };\n  }\n  try {\n    const nodeId = [1, 2, 3, 4, 5];\n    const nodeUrl = nodeId.map(elem => `/api/setSharedKey/${elem}`);\n    const requestData = async (url, index) => {\n      try {\n        const response = await (0, util_1.API_NODE_HANDLER)(url, \"POST\", auth_token, shareTo.length > 0 ? {\n          address,\n          cid,\n          payload: keyShards[index],\n          sharedTo: shareTo\n        } : {\n          address,\n          cid,\n          payload: keyShards[index]\n        });\n        return response;\n      } catch (error) {\n        return {\n          error\n        };\n      }\n    };\n    const data = [];\n    for (const [index, url] of nodeUrl.entries()) {\n      const response = await requestData(url, index);\n      if (response.error) {\n        return {\n          isSuccess: false,\n          error: JSON.parse(response?.error?.message)\n        };\n      }\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      data.push(response);\n    }\n    const temp = data.map((elem, index) => ({\n      ...elem,\n      data: null\n    }));\n    return {\n      isSuccess: (0, util_2.isEqual)(...temp) && data[0]?.message === \"success\",\n      error: null\n    };\n  } catch (err) {\n    return {\n      isSuccess: false,\n      error: err\n    };\n  }\n};\nexports.saveShards = saveShards;","map":{"version":3,"names":["Object","defineProperty","exports","value","saveShards","util_1","require","util_2","address","cid","auth_token","keyShards","shareTo","isCidReg","isSuccess","error","Array","isArray","length","nodeId","nodeUrl","map","elem","requestData","url","index","response","API_NODE_HANDLER","payload","sharedTo","data","entries","JSON","parse","message","Promise","resolve","setTimeout","push","temp","isEqual","err"],"sources":["D:/demo/node_modules/@lighthouse-web3/kavach/dist/methods/saveShards/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.saveShards = void 0;\nconst util_1 = require(\"../../util\");\nconst util_2 = require(\"../../util\");\nconst saveShards = async (address, cid, auth_token, keyShards, shareTo = []) => {\n    if (!(0, util_2.isCidReg)(cid)) {\n        return {\n            isSuccess: false,\n            error: \"Invalid CID\",\n        };\n    }\n    if (!Array.isArray(keyShards) || keyShards.length != 5) {\n        return {\n            isSuccess: false,\n            error: \"keyShards must be an array of 5 objects\",\n        };\n    }\n    try {\n        const nodeId = [1, 2, 3, 4, 5];\n        const nodeUrl = nodeId.map((elem) => `/api/setSharedKey/${elem}`);\n        const requestData = async (url, index) => {\n            try {\n                const response = await (0, util_1.API_NODE_HANDLER)(url, \"POST\", auth_token, shareTo.length > 0\n                    ? {\n                        address,\n                        cid,\n                        payload: keyShards[index],\n                        sharedTo: shareTo,\n                    }\n                    : {\n                        address,\n                        cid,\n                        payload: keyShards[index],\n                    });\n                return response;\n            }\n            catch (error) {\n                return {\n                    error,\n                };\n            }\n        };\n        const data = [];\n        for (const [index, url] of nodeUrl.entries()) {\n            const response = await requestData(url, index);\n            if (response.error) {\n                return {\n                    isSuccess: false,\n                    error: JSON.parse(response?.error?.message),\n                };\n            }\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            data.push(response);\n        }\n        const temp = data.map((elem, index) => ({ ...elem, data: null }));\n        return {\n            isSuccess: (0, util_2.isEqual)(...temp) && data[0]?.message === \"success\",\n            error: null,\n        };\n    }\n    catch (err) {\n        return {\n            isSuccess: false,\n            error: err,\n        };\n    }\n};\nexports.saveShards = saveShards;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAY,CAAC;AACpC,MAAMC,MAAM,GAAGD,OAAO,CAAC,YAAY,CAAC;AACpC,MAAMF,UAAU,GAAG,MAAAA,CAAOI,OAAO,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,GAAG,EAAE,KAAK;EAC5E,IAAI,CAAC,CAAC,CAAC,EAAEL,MAAM,CAACM,QAAQ,EAAEJ,GAAG,CAAC,EAAE;IAC5B,OAAO;MACHK,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE;IACX,CAAC;EACL;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACN,SAAS,CAAC,IAAIA,SAAS,CAACO,MAAM,IAAI,CAAC,EAAE;IACpD,OAAO;MACHJ,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE;IACX,CAAC;EACL;EACA,IAAI;IACA,MAAMI,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9B,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAG,CAAEC,IAAI,IAAK,qBAAqBA,IAAI,EAAE,CAAC;IACjE,MAAMC,WAAW,GAAG,MAAAA,CAAOC,GAAG,EAAEC,KAAK,KAAK;MACtC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAErB,MAAM,CAACsB,gBAAgB,EAAEH,GAAG,EAAE,MAAM,EAAEd,UAAU,EAAEE,OAAO,CAACM,MAAM,GAAG,CAAC,GACzF;UACEV,OAAO;UACPC,GAAG;UACHmB,OAAO,EAAEjB,SAAS,CAACc,KAAK,CAAC;UACzBI,QAAQ,EAAEjB;QACd,CAAC,GACC;UACEJ,OAAO;UACPC,GAAG;UACHmB,OAAO,EAAEjB,SAAS,CAACc,KAAK;QAC5B,CAAC,CAAC;QACN,OAAOC,QAAQ;MACnB,CAAC,CACD,OAAOX,KAAK,EAAE;QACV,OAAO;UACHA;QACJ,CAAC;MACL;IACJ,CAAC;IACD,MAAMe,IAAI,GAAG,EAAE;IACf,KAAK,MAAM,CAACL,KAAK,EAAED,GAAG,CAAC,IAAIJ,OAAO,CAACW,OAAO,CAAC,CAAC,EAAE;MAC1C,MAAML,QAAQ,GAAG,MAAMH,WAAW,CAACC,GAAG,EAAEC,KAAK,CAAC;MAC9C,IAAIC,QAAQ,CAACX,KAAK,EAAE;QAChB,OAAO;UACHD,SAAS,EAAE,KAAK;UAChBC,KAAK,EAAEiB,IAAI,CAACC,KAAK,CAACP,QAAQ,EAAEX,KAAK,EAAEmB,OAAO;QAC9C,CAAC;MACL;MACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;MACzDN,IAAI,CAACQ,IAAI,CAACZ,QAAQ,CAAC;IACvB;IACA,MAAMa,IAAI,GAAGT,IAAI,CAACT,GAAG,CAAC,CAACC,IAAI,EAAEG,KAAK,MAAM;MAAE,GAAGH,IAAI;MAAEQ,IAAI,EAAE;IAAK,CAAC,CAAC,CAAC;IACjE,OAAO;MACHhB,SAAS,EAAE,CAAC,CAAC,EAAEP,MAAM,CAACiC,OAAO,EAAE,GAAGD,IAAI,CAAC,IAAIT,IAAI,CAAC,CAAC,CAAC,EAAEI,OAAO,KAAK,SAAS;MACzEnB,KAAK,EAAE;IACX,CAAC;EACL,CAAC,CACD,OAAO0B,GAAG,EAAE;IACR,OAAO;MACH3B,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE0B;IACX,CAAC;EACL;AACJ,CAAC;AACDvC,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}