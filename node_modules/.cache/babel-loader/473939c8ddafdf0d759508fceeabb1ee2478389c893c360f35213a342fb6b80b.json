{"ast":null,"code":"var _jsxFileName = \"D:\\\\demo\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\"; // Import ethers v6\nimport lighthouse from '@lighthouse-web3/sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONTRACT_ADDRESS = \"YOUR_SMART_CONTRACT_ADDRESS\";\nconst ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"_metadataURI\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"addPrompt\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getUserPrompts\",\n  \"outputs\": [{\n    \"internalType\": \"string[]\",\n    \"name\": \"\",\n    \"type\": \"string[]\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prompts, setPrompts] = useState([]);\n  const [metadata, setMetadata] = useState({\n    name: \"\",\n    description: \"\",\n    category: \"ML\"\n  });\n  useEffect(() => {\n    async function init() {\n      if (window.ethereum) {\n        const provider = new ethers.BrowserProvider(window.ethereum); // Use BrowserProvider\n        setProvider(provider);\n        await connectWallet(provider);\n      } else {\n        alert(\"MetaMask not detected\");\n      }\n    }\n    init();\n  }, []);\n  const connectWallet = async provider => {\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []); // Use provider.request\n      setAccount(accounts[0]);\n      const signer = await provider.getSigner(); // Await getSigner\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\n      setContract(contract);\n    } catch (error) {\n      console.error(\"Error connecting wallet:\", error);\n      alert(\"Failed to connect wallet. Please try again.\");\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleInputChange = event => {\n    setMetadata({\n      ...metadata,\n      [event.target.name]: event.target.value\n    });\n  };\n  const convertFileToJson = async () => {\n    if (!selectedFile) return alert(\"Select a file to upload\");\n    const reader = new FileReader();\n    reader.readAsText(selectedFile);\n    reader.onload = async e => {\n      const fileContent = e.target.result;\n      const jsonMetadata = {\n        name: metadata.name,\n        description: metadata.description,\n        category: metadata.category,\n        content: fileContent\n      };\n      const blob = new Blob([JSON.stringify(jsonMetadata)], {\n        type: \"application/json\"\n      });\n      const jsonFile = new File([blob], \"metadata.json\", {\n        type: \"application/json\"\n      });\n      uploadToLighthouse(jsonFile);\n    };\n  };\n  const uploadToLighthouse = async jsonFile => {\n    try {\n      const apiKey = \"YOUR_LIGHTHOUSE_API_KEY\";\n      const response = await lighthouse.upload(jsonFile, apiKey);\n      const metadataURI = `https://gateway.lighthouse.storage/ipfs/${response.data.Hash}`;\n      console.log(\"Uploaded to Lighthouse:\", metadataURI);\n      if (contract) {\n        const tx = await contract.addPrompt(metadataURI);\n        await tx.wait();\n        alert(\"Prompt stored successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading to Lighthouse or storing in contract:\", error);\n      alert(\"Failed to upload or store prompt. Please try again.\");\n    }\n  };\n  const fetchUserPrompts = async () => {\n    if (!contract) return;\n    try {\n      const userPrompts = await contract.getUserPrompts(account);\n      setPrompts(userPrompts);\n    } catch (error) {\n      console.error(\"Error fetching prompts:\", error);\n      alert(\"Failed to fetch prompts. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Decentralized Prompt Marketplace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Account: \", account || \"Not connected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => connectWallet(provider),\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Prompt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Prompt Name\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"category\",\n      onChange: handleInputChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ML\",\n        children: \"Machine Learning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Blockchain\",\n        children: \"Blockchain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Data Science\",\n        children: \"Data Science\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: convertFileToJson,\n      children: \"Upload & Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Stored Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchUserPrompts,\n      children: \"Fetch My Prompts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: prompt,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 27\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+5sTCx1GUFqF5GVgXSloIjPr2X4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","lighthouse","jsxDEV","_jsxDEV","CONTRACT_ADDRESS","ABI","App","_s","account","setAccount","contract","setContract","provider","setProvider","selectedFile","setSelectedFile","prompts","setPrompts","metadata","setMetadata","name","description","category","init","window","ethereum","BrowserProvider","connectWallet","alert","accounts","send","signer","getSigner","Contract","error","console","handleFileChange","event","file","target","files","handleInputChange","value","convertFileToJson","reader","FileReader","readAsText","onload","e","fileContent","result","jsonMetadata","content","blob","Blob","JSON","stringify","type","jsonFile","File","uploadToLighthouse","apiKey","response","upload","metadataURI","data","Hash","log","tx","addPrompt","wait","fetchUserPrompts","userPrompts","getUserPrompts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","map","prompt","index","href","rel","_c","$RefreshReg$"],"sources":["D:/demo/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\"; // Import ethers v6\r\nimport lighthouse from '@lighthouse-web3/sdk';\r\n\r\nconst CONTRACT_ADDRESS = \"YOUR_SMART_CONTRACT_ADDRESS\";\r\nconst ABI = [\r\n  {\r\n    \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_metadataURI\", \"type\": \"string\" }],\r\n    \"name\": \"addPrompt\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }],\r\n    \"name\": \"getUserPrompts\",\r\n    \"outputs\": [{ \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" }],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [contract, setContract] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [prompts, setPrompts] = useState([]);\r\n  const [metadata, setMetadata] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    category: \"ML\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      if (window.ethereum) {\r\n        const provider = new ethers.BrowserProvider(window.ethereum); // Use BrowserProvider\r\n        setProvider(provider);\r\n        await connectWallet(provider);\r\n      } else {\r\n        alert(\"MetaMask not detected\");\r\n      }\r\n    }\r\n    init();\r\n  }, []);\r\n\r\n  const connectWallet = async (provider) => {\r\n    try {\r\n      const accounts = await provider.send(\"eth_requestAccounts\", []); // Use provider.request\r\n      setAccount(accounts[0]);\r\n      const signer = await provider.getSigner(); // Await getSigner\r\n      const contract = new ethers.Contract(CONTRACT_ADDRESS, ABI, signer);\r\n      setContract(contract);\r\n    } catch (error) {\r\n      console.error(\"Error connecting wallet:\", error);\r\n      alert(\"Failed to connect wallet. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setMetadata({ ...metadata, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const convertFileToJson = async () => {\r\n    if (!selectedFile) return alert(\"Select a file to upload\");\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsText(selectedFile);\r\n    reader.onload = async (e) => {\r\n      const fileContent = e.target.result;\r\n      const jsonMetadata = {\r\n        name: metadata.name,\r\n        description: metadata.description,\r\n        category: metadata.category,\r\n        content: fileContent\r\n      };\r\n\r\n      const blob = new Blob([JSON.stringify(jsonMetadata)], { type: \"application/json\" });\r\n      const jsonFile = new File([blob], \"metadata.json\", { type: \"application/json\" });\r\n\r\n      uploadToLighthouse(jsonFile);\r\n    };\r\n  };\r\n\r\n  const uploadToLighthouse = async (jsonFile) => {\r\n    try {\r\n      const apiKey = \"YOUR_LIGHTHOUSE_API_KEY\";\r\n      const response = await lighthouse.upload(jsonFile, apiKey);\r\n      const metadataURI = `https://gateway.lighthouse.storage/ipfs/${response.data.Hash}`;\r\n      console.log(\"Uploaded to Lighthouse:\", metadataURI);\r\n\r\n      if (contract) {\r\n        const tx = await contract.addPrompt(metadataURI);\r\n        await tx.wait();\r\n        alert(\"Prompt stored successfully\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading to Lighthouse or storing in contract:\", error);\r\n      alert(\"Failed to upload or store prompt. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const fetchUserPrompts = async () => {\r\n    if (!contract) return;\r\n    try {\r\n      const userPrompts = await contract.getUserPrompts(account);\r\n      setPrompts(userPrompts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching prompts:\", error);\r\n      alert(\"Failed to fetch prompts. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Decentralized Prompt Marketplace</h1>\r\n      <p>Connected Account: {account || \"Not connected\"}</p>\r\n      <button onClick={() => connectWallet(provider)}>Connect MetaMask</button>\r\n      <br /><br />\r\n\r\n      <h3>Upload Prompt</h3>\r\n      <input type=\"text\" name=\"name\" placeholder=\"Prompt Name\" onChange={handleInputChange} />\r\n      <textarea name=\"description\" placeholder=\"Description\" onChange={handleInputChange} />\r\n      <select name=\"category\" onChange={handleInputChange}>\r\n        <option value=\"ML\">Machine Learning</option>\r\n        <option value=\"Blockchain\">Blockchain</option>\r\n        <option value=\"Data Science\">Data Science</option>\r\n      </select>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={convertFileToJson}>Upload & Store</button>\r\n      <br /><br />\r\n\r\n      <h3>Your Stored Prompts</h3>\r\n      <button onClick={fetchUserPrompts}>Fetch My Prompts</button>\r\n      <ul>\r\n        {prompts.map((prompt, index) => (\r\n          <li key={index}><a href={prompt} target=\"_blank\" rel=\"noopener noreferrer\">{prompt}</a></li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}