{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst kavach_1 = require(\"@lighthouse-web3/kavach\");\nexports.default = async (cid, publicKey, signedMessage, dynamicData = {}, shardCount = 3) => {\n  const {\n    error,\n    shards\n  } = await (0, kavach_1.recoverShards)(publicKey, cid, signedMessage, shardCount, dynamicData);\n  if (error) {\n    throw error;\n  }\n  const {\n    masterKey: key,\n    error: recoverError\n  } = await (0, kavach_1.recoverKey)(shards);\n  if (recoverError) {\n    throw recoverError;\n  }\n  return {\n    data: {\n      key: key\n    }\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","kavach_1","require","default","cid","publicKey","signedMessage","dynamicData","shardCount","error","shards","recoverShards","masterKey","key","recoverError","recoverKey","data"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/encryption/fetchEncryptionKey.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst kavach_1 = require(\"@lighthouse-web3/kavach\");\nexports.default = async (cid, publicKey, signedMessage, dynamicData = {}, shardCount = 3) => {\n    const { error, shards } = await (0, kavach_1.recoverShards)(publicKey, cid, signedMessage, shardCount, dynamicData);\n    if (error) {\n        throw error;\n    }\n    const { masterKey: key, error: recoverError } = await (0, kavach_1.recoverKey)(shards);\n    if (recoverError) {\n        throw recoverError;\n    }\n    return { data: { key: key } };\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,QAAQ,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AACnDH,OAAO,CAACI,OAAO,GAAG,OAAOC,GAAG,EAAEC,SAAS,EAAEC,aAAa,EAAEC,WAAW,GAAG,CAAC,CAAC,EAAEC,UAAU,GAAG,CAAC,KAAK;EACzF,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAG,MAAM,CAAC,CAAC,EAAET,QAAQ,CAACU,aAAa,EAAEN,SAAS,EAAED,GAAG,EAAEE,aAAa,EAAEE,UAAU,EAAED,WAAW,CAAC;EACnH,IAAIE,KAAK,EAAE;IACP,MAAMA,KAAK;EACf;EACA,MAAM;IAAEG,SAAS,EAAEC,GAAG;IAAEJ,KAAK,EAAEK;EAAa,CAAC,GAAG,MAAM,CAAC,CAAC,EAAEb,QAAQ,CAACc,UAAU,EAAEL,MAAM,CAAC;EACtF,IAAII,YAAY,EAAE;IACd,MAAMA,YAAY;EACtB;EACA,OAAO;IAAEE,IAAI,EAAE;MAAEH,GAAG,EAAEA;IAAI;EAAE,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}