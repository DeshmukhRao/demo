{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverShards = void 0;\nconst util_1 = require(\"../../util\");\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nfunction randSelect(k, n) {\n  if (k > n) {\n    throw new Error(\"k cannot be greater than n\");\n  }\n  const numbers = Array.from({\n    length: n\n  }, (_, i) => i + 1);\n  const shuffledNumbers = shuffleArray(numbers);\n  return shuffledNumbers.slice(0, k).sort((a, b) => a - b);\n}\nconst recoverShards = async (address, cid, auth_token, numOfShards = 3, dynamicData = {}) => {\n  try {\n    const nodeIndexSelected = randSelect(numOfShards, 5);\n    const nodeUrl = nodeIndexSelected.map(elem => `/api/retrieveSharedKey/${elem}`);\n    // send encryption key\n    const requestData = async (url, index) => {\n      try {\n        const response = await (0, util_1.API_NODE_HANDLER)(url, \"POST\", auth_token, {\n          address,\n          cid,\n          dynamicData\n        });\n        return response;\n      } catch (error) {\n        throw new Error(error?.message || \"Unknown error\");\n      }\n    };\n    const recoveredShards = [];\n    for (const [index, url] of nodeUrl.entries()) {\n      const response = await requestData(url, index);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      recoveredShards.push(response?.payload);\n    }\n    return {\n      shards: recoveredShards,\n      error: null\n    };\n  } catch (err) {\n    if (err.message.includes(\"null\")) {\n      return {\n        shards: [],\n        error: `cid not found`\n      };\n    }\n    return {\n      shards: [],\n      error: JSON.parse(err?.message)\n    };\n  }\n};\nexports.recoverShards = recoverShards;","map":{"version":3,"names":["Object","defineProperty","exports","value","recoverShards","util_1","require","shuffleArray","array","i","length","j","Math","floor","random","randSelect","k","n","Error","numbers","Array","from","_","shuffledNumbers","slice","sort","a","b","address","cid","auth_token","numOfShards","dynamicData","nodeIndexSelected","nodeUrl","map","elem","requestData","url","index","response","API_NODE_HANDLER","error","message","recoveredShards","entries","Promise","resolve","setTimeout","push","payload","shards","err","includes","JSON","parse"],"sources":["D:/demo/node_modules/@lighthouse-web3/kavach/dist/methods/recoverShards/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverShards = void 0;\nconst util_1 = require(\"../../util\");\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\nfunction randSelect(k, n) {\n    if (k > n) {\n        throw new Error(\"k cannot be greater than n\");\n    }\n    const numbers = Array.from({ length: n }, (_, i) => i + 1);\n    const shuffledNumbers = shuffleArray(numbers);\n    return shuffledNumbers.slice(0, k).sort((a, b) => a - b);\n}\nconst recoverShards = async (address, cid, auth_token, numOfShards = 3, dynamicData = {}) => {\n    try {\n        const nodeIndexSelected = randSelect(numOfShards, 5);\n        const nodeUrl = nodeIndexSelected.map((elem) => `/api/retrieveSharedKey/${elem}`);\n        // send encryption key\n        const requestData = async (url, index) => {\n            try {\n                const response = await (0, util_1.API_NODE_HANDLER)(url, \"POST\", auth_token, {\n                    address,\n                    cid,\n                    dynamicData,\n                });\n                return response;\n            }\n            catch (error) {\n                throw new Error(error?.message || \"Unknown error\");\n            }\n        };\n        const recoveredShards = [];\n        for (const [index, url] of nodeUrl.entries()) {\n            const response = await requestData(url, index);\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            recoveredShards.push(response?.payload);\n        }\n        return {\n            shards: recoveredShards,\n            error: null,\n        };\n    }\n    catch (err) {\n        if (err.message.includes(\"null\")) {\n            return {\n                shards: [],\n                error: `cid not found`,\n            };\n        }\n        return {\n            shards: [],\n            error: JSON.parse(err?.message),\n        };\n    }\n};\nexports.recoverShards = recoverShards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}