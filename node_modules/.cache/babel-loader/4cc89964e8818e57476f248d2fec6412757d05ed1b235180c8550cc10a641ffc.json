{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverKey = void 0;\nlet bls = null;\nif (typeof window === \"undefined\") {\n  bls = eval(\"require\")(\"bls-eth-wasm\");\n} else {\n  bls = require(\"bls-eth-wasm/browser\");\n}\nconst recoverKey = async keyShards => {\n  if (!Array.isArray(keyShards) || !(typeof keyShards[0].index == \"string\") || !(typeof keyShards[0].key == \"string\")) {\n    throw new Error(\"keyShards must be an array of objects containing these keys [index, key]\");\n  }\n  try {\n    const idVec = [];\n    const secVec = [];\n    await bls.init(bls.BLS12_381).then(() => bls.getCurveOrder());\n    keyShards.map(keyShard => {\n      const sk = new bls.SecretKey();\n      //convert readable string into secretKey vectors\n      sk.deserializeHexStr(keyShard.key);\n      secVec.push(sk);\n      //convert readable string into Id vectors\n      const id = new bls.Id();\n      id.deserializeHexStr(keyShard.index);\n      idVec.push(id);\n    });\n    const sec = new bls.SecretKey();\n    //recover key\n    sec.recover(secVec, idVec);\n    const s = sec.serializeToHexStr();\n    return {\n      masterKey: s,\n      error: null\n    };\n  } catch (err) {\n    return {\n      masterKey: null,\n      error: \"can't recover Key\"\n    };\n  }\n};\nexports.recoverKey = recoverKey;","map":{"version":3,"names":["Object","defineProperty","exports","value","recoverKey","bls","window","eval","require","keyShards","Array","isArray","index","key","Error","idVec","secVec","init","BLS12_381","then","getCurveOrder","map","keyShard","sk","SecretKey","deserializeHexStr","push","id","Id","sec","recover","s","serializeToHexStr","masterKey","error","err"],"sources":["D:/demo/node_modules/@lighthouse-web3/kavach/dist/methods/recoverKey/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverKey = void 0;\nlet bls = null;\nif (typeof window === \"undefined\") {\n    bls = eval(\"require\")(\"bls-eth-wasm\");\n}\nelse {\n    bls = require(\"bls-eth-wasm/browser\");\n}\nconst recoverKey = async (keyShards) => {\n    if (!Array.isArray(keyShards) ||\n        !(typeof keyShards[0].index == \"string\") ||\n        !(typeof keyShards[0].key == \"string\")) {\n        throw new Error(\"keyShards must be an array of objects containing these keys [index, key]\");\n    }\n    try {\n        const idVec = [];\n        const secVec = [];\n        await bls.init(bls.BLS12_381).then(() => bls.getCurveOrder());\n        keyShards.map((keyShard) => {\n            const sk = new bls.SecretKey();\n            //convert readable string into secretKey vectors\n            sk.deserializeHexStr(keyShard.key);\n            secVec.push(sk);\n            //convert readable string into Id vectors\n            const id = new bls.Id();\n            id.deserializeHexStr(keyShard.index);\n            idVec.push(id);\n        });\n        const sec = new bls.SecretKey();\n        //recover key\n        sec.recover(secVec, idVec);\n        const s = sec.serializeToHexStr();\n        return { masterKey: s, error: null };\n    }\n    catch (err) {\n        return { masterKey: null, error: \"can't recover Key\" };\n    }\n};\nexports.recoverKey = recoverKey;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAIC,GAAG,GAAG,IAAI;AACd,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAC/BD,GAAG,GAAGE,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC;AACzC,CAAC,MACI;EACDF,GAAG,GAAGG,OAAO,CAAC,sBAAsB,CAAC;AACzC;AACA,MAAMJ,UAAU,GAAG,MAAOK,SAAS,IAAK;EACpC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,IACzB,EAAE,OAAOA,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,IAAI,QAAQ,CAAC,IACxC,EAAE,OAAOH,SAAS,CAAC,CAAC,CAAC,CAACI,GAAG,IAAI,QAAQ,CAAC,EAAE;IACxC,MAAM,IAAIC,KAAK,CAAC,0EAA0E,CAAC;EAC/F;EACA,IAAI;IACA,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMX,GAAG,CAACY,IAAI,CAACZ,GAAG,CAACa,SAAS,CAAC,CAACC,IAAI,CAAC,MAAMd,GAAG,CAACe,aAAa,CAAC,CAAC,CAAC;IAC7DX,SAAS,CAACY,GAAG,CAAEC,QAAQ,IAAK;MACxB,MAAMC,EAAE,GAAG,IAAIlB,GAAG,CAACmB,SAAS,CAAC,CAAC;MAC9B;MACAD,EAAE,CAACE,iBAAiB,CAACH,QAAQ,CAACT,GAAG,CAAC;MAClCG,MAAM,CAACU,IAAI,CAACH,EAAE,CAAC;MACf;MACA,MAAMI,EAAE,GAAG,IAAItB,GAAG,CAACuB,EAAE,CAAC,CAAC;MACvBD,EAAE,CAACF,iBAAiB,CAACH,QAAQ,CAACV,KAAK,CAAC;MACpCG,KAAK,CAACW,IAAI,CAACC,EAAE,CAAC;IAClB,CAAC,CAAC;IACF,MAAME,GAAG,GAAG,IAAIxB,GAAG,CAACmB,SAAS,CAAC,CAAC;IAC/B;IACAK,GAAG,CAACC,OAAO,CAACd,MAAM,EAAED,KAAK,CAAC;IAC1B,MAAMgB,CAAC,GAAGF,GAAG,CAACG,iBAAiB,CAAC,CAAC;IACjC,OAAO;MAAEC,SAAS,EAAEF,CAAC;MAAEG,KAAK,EAAE;IAAK,CAAC;EACxC,CAAC,CACD,OAAOC,GAAG,EAAE;IACR,OAAO;MAAEF,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAoB,CAAC;EAC1D;AACJ,CAAC;AACDhC,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}