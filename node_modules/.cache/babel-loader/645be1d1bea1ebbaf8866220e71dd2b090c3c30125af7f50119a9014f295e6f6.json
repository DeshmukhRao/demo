{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.walk = void 0;\nconst basePathConvert_1 = __importDefault(require(\"../../utils/basePathConvert\"));\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\nasync function walk(dir) {\n  const {\n    readdir,\n    stat\n  } = eval(`require`)('fs-extra');\n  let results = [];\n  const files = await readdir(dir);\n  for (const file of files) {\n    const filePath = `${dir}/${file}`;\n    const _stat = await stat(filePath);\n    if (_stat.isDirectory()) {\n      results = results.concat(await walk(filePath));\n    } else {\n      results.push(filePath);\n    }\n  }\n  return results;\n}\nexports.walk = walk;\nexports.default = async (sourcePath, apiKey, dealParameters) => {\n  const {\n    createReadStream,\n    lstatSync\n  } = eval(`require`)('fs-extra');\n  const path = eval(`require`)('path');\n  const token = 'Bearer ' + apiKey;\n  const stats = lstatSync(sourcePath);\n  try {\n    const endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + `/api/v0/add?wrap-with-directory=false`;\n    if (stats.isFile()) {\n      const data = new FormData();\n      const stream = createReadStream(sourcePath);\n      const buffers = [];\n      for await (const chunk of stream) {\n        buffers.push(chunk);\n      }\n      const blob = new Blob(buffers);\n      data.append('file', blob, path.basename(sourcePath));\n      const response = await (0, util_1.fetchWithTimeout)(endpoint, {\n        method: 'POST',\n        body: data,\n        timeout: 7200000,\n        headers: {\n          Authorization: token,\n          'X-Deal-Parameter': dealParameters ? JSON.stringify(dealParameters) : 'null'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status code ${response.status}`);\n      }\n      let responseData = await response.text();\n      responseData = JSON.parse(responseData);\n      return {\n        data: responseData\n      };\n    } else {\n      const files = await walk(sourcePath);\n      const data = new FormData();\n      for (const file of files) {\n        const stream = createReadStream(file);\n        const buffers = [];\n        for await (const chunk of stream) {\n          buffers.push(chunk);\n        }\n        const blob = new Blob(buffers);\n        data.append('file', blob, (0, basePathConvert_1.default)(sourcePath, file));\n      }\n      const response = await (0, util_1.fetchWithTimeout)(endpoint, {\n        method: 'POST',\n        body: data,\n        timeout: 7200000,\n        headers: {\n          Authorization: token,\n          'X-Deal-Parameter': dealParameters ? JSON.stringify(dealParameters) : 'null'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Request failed with status code ${response.status}`);\n      }\n      let responseData = await response.text();\n      responseData = JSON.parse(responseData);\n      return {\n        data: responseData\n      };\n    }\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","walk","basePathConvert_1","require","lighthouse_config_1","util_1","dir","readdir","stat","eval","results","files","file","filePath","_stat","isDirectory","concat","push","default","sourcePath","apiKey","dealParameters","createReadStream","lstatSync","path","token","stats","endpoint","lighthouseConfig","lighthouseNode","isFile","data","FormData","stream","buffers","chunk","blob","Blob","append","basename","response","fetchWithTimeout","method","body","timeout","headers","Authorization","JSON","stringify","ok","Error","status","responseData","text","parse","error","message"],"sources":["D:/demo/node_modules/@lighthouse-web3/sdk/dist/Lighthouse/upload/files/node.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.walk = void 0;\nconst basePathConvert_1 = __importDefault(require(\"../../utils/basePathConvert\"));\nconst lighthouse_config_1 = require(\"../../../lighthouse.config\");\nconst util_1 = require(\"../../utils/util\");\nasync function walk(dir) {\n    const { readdir, stat } = eval(`require`)('fs-extra');\n    let results = [];\n    const files = await readdir(dir);\n    for (const file of files) {\n        const filePath = `${dir}/${file}`;\n        const _stat = await stat(filePath);\n        if (_stat.isDirectory()) {\n            results = results.concat(await walk(filePath));\n        }\n        else {\n            results.push(filePath);\n        }\n    }\n    return results;\n}\nexports.walk = walk;\nexports.default = async (sourcePath, apiKey, dealParameters) => {\n    const { createReadStream, lstatSync } = eval(`require`)('fs-extra');\n    const path = eval(`require`)('path');\n    const token = 'Bearer ' + apiKey;\n    const stats = lstatSync(sourcePath);\n    try {\n        const endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode +\n            `/api/v0/add?wrap-with-directory=false`;\n        if (stats.isFile()) {\n            const data = new FormData();\n            const stream = createReadStream(sourcePath);\n            const buffers = [];\n            for await (const chunk of stream) {\n                buffers.push(chunk);\n            }\n            const blob = new Blob(buffers);\n            data.append('file', blob, path.basename(sourcePath));\n            const response = await (0, util_1.fetchWithTimeout)(endpoint, {\n                method: 'POST',\n                body: data,\n                timeout: 7200000,\n                headers: {\n                    Authorization: token,\n                    'X-Deal-Parameter': dealParameters\n                        ? JSON.stringify(dealParameters)\n                        : 'null',\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`Request failed with status code ${response.status}`);\n            }\n            let responseData = (await response.text());\n            responseData = JSON.parse(responseData);\n            return { data: responseData };\n        }\n        else {\n            const files = await walk(sourcePath);\n            const data = new FormData();\n            for (const file of files) {\n                const stream = createReadStream(file);\n                const buffers = [];\n                for await (const chunk of stream) {\n                    buffers.push(chunk);\n                }\n                const blob = new Blob(buffers);\n                data.append('file', blob, (0, basePathConvert_1.default)(sourcePath, file));\n            }\n            const response = await (0, util_1.fetchWithTimeout)(endpoint, {\n                method: 'POST',\n                body: data,\n                timeout: 7200000,\n                headers: {\n                    Authorization: token,\n                    'X-Deal-Parameter': dealParameters\n                        ? JSON.stringify(dealParameters)\n                        : 'null',\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`Request failed with status code ${response.status}`);\n            }\n            let responseData = (await response.text());\n            responseData = JSON.parse(responseData);\n            return { data: responseData };\n        }\n    }\n    catch (error) {\n        throw new Error(error.message);\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}